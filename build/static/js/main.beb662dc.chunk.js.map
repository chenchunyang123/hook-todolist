{"version":3,"sources":["components/InputBox/index.js","components/List/index.js","components/FilterOptions/index.js","App.js","index.js"],"names":["addOne","value","all","concat","Object","toConsumableArray","id","Date","getTime","text","done","InputBox","props","inputValue","setValue","todoThings","setTodo","react_default","a","createElement","placeholder","type","onChange","e","target","onClick","changeDone","forEach","item","deleteOne","newArr","filter","filterTodo","Error","List","renderValue","renderArr","className","length","map","idx","key","style","width","textDecoration","float","FilterOptions","setRenderValue","backgroundColor","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","InputBoxProps","ListProps","optionsProps","components_InputBox","components_List","components_FilterOptions","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.beb662dc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// 添加一项的方法(参数： 输入框当前值和list事项的值)\r\nconst addOne = (value, all) => {\r\n\treturn [...all, { id: new Date().getTime(), text: value, done: false }];\r\n}\r\n\r\nfunction InputBox(props) {\r\n\tlet { inputValue, setValue, todoThings, setTodo } = props;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input \r\n\t\t\t\tplaceholder='请输入待办事项' \r\n\t\t\t\ttype='text' \r\n\t\t\t\tvalue={inputValue} \r\n\t\t\t\tonChange={e => setValue(e.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button \r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tinputValue && setTodo(addOne(inputValue, todoThings))\r\n\t\t\t\t\t// 增加完过后清空输入框\r\n\t\t\t\t\tsetValue('')\r\n\t\t\t\t}}\r\n\t\t\t>ADD</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default InputBox;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\n// 改变当前选中的change方法(参数：当前点击的text值以及渲染的所有数组值)\r\nconst changeDone = (id, all) => {\r\n\tall.forEach(item => {\r\n\t\tif(item.id === id) {\r\n\t\t\titem.done = !item.done;\r\n\t\t}\r\n\t})\r\n\t// 返回新的渲染数组(直接返回all的话不会进行更新，会造成修改的数据丢失)\r\n\treturn [...all];\r\n}\r\n\r\n// 删除某一个事件的方法\r\nconst deleteOne = (id, all) => {\r\n\tlet newArr = all.filter(item => item.id !== id);\r\n\treturn [...newArr];\r\n}\r\n\r\n// 根据条件过滤todo的方法\r\nconst filterTodo = (value, all) => {\r\n\tswitch (value) {\r\n\t\tcase 1:\r\n\t\t\treturn all;\r\n\t\tcase 2: \r\n\t\t\treturn all.filter(item => item.done === true);\r\n\t\tcase 3:\r\n\t\t\treturn all.filter(item => item.done === false);\r\n\t\tdefault:\r\n\t\t\tthrow new Error('过滤条件错误');\r\n\t}\r\n}\r\n\r\nfunction List(props) {\r\n\tlet { renderValue, todoThings, setTodo } = props;\r\n\t// 根据renderValue过滤一次todoThings数组\r\n\tlet renderArr = filterTodo(renderValue, todoThings);\r\n\treturn (\r\n\t\t<ul className='listWrap'>\r\n\t\t\t{\r\n\t\t\t\trenderArr.length ? \r\n\t\t\t\trenderArr.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={idx} style={{width: '200px'}}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttextDecoration: item.done ? 'line-through' : 'none',\r\n\t\t\t\t\t\t\t\t\tfloat: 'left',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() => setTodo(changeDone(item.id, todoThings))}\r\n\t\t\t\t\t\t\t>{item.text}</div>\r\n\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\tclassName='close'\r\n\t\t\t\t\t\t\t\tonClick={() => setTodo(deleteOne(item.id, todoThings))}\r\n\t\t\t\t\t\t\t>X</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t}) :\r\n\t\t\t\tnull\r\n\t\t\t}\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nconst renderArr = ['全部', '已完成', '未完成'];     // 定义出来简化书写\r\n\r\nfunction FilterOptions(props) {\r\n    let { renderValue, setRenderValue } = props;\r\n    return (\r\n        <div className='options'>\r\n            {/* <button style={{backgroundColor: renderValue === 2 ? 'orange' : null}} onClick={() => setRenderValue(2)}>已完成</button>\r\n            <button style={{backgroundColor: renderValue === 3 ? 'orange' : null}} onClick={() => setRenderValue(3)}>未完成</button>\r\n            <button style={{backgroundColor: renderValue === 1 ? 'orange' : null}} onClick={() => setRenderValue(1)}>全部</button> */}\r\n            {\r\n                renderArr.map((item, idx) => {\r\n                    return (\r\n                        <button \r\n                            key={idx} \r\n                            style={{backgroundColor: renderValue === idx + 1 ? 'orange' : null}} \r\n                            onClick={() => setRenderValue(idx + 1)}\r\n                        >{item}</button>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterOptions;","import React, { useState } from 'react';\nimport './App.css';\n\n// 引入相关组件\nimport InputBox from './components/InputBox';\nimport List from './components/List';\nimport FilterOptions from './components/FilterOptions';\n\nfunction App() {\n\t// 定义所有的state\n\tconst [inputValue, setValue] = useState('');\t// 输入内容相关\n\tconst [todoThings, setTodo] = useState([{ id: 1, text: '学习hook', done: true }]);\t// 待办事项列表相关\n\tconst [renderValue, setRenderValue] =  useState(1);\t\t// 1为全部， 2为已完成， 3为未完成\n\n\t// 往下穿的对象\n\tconst InputBoxProps = {\n\t\tinputValue,\n\t\tsetValue,\n\t\ttodoThings,\n\t\tsetTodo,\n\t}\n\tconst ListProps = {\n\t\trenderValue,\n\t\ttodoThings,\n\t\tsetTodo,\n\t}\n\tconst optionsProps = {\n\t\trenderValue,\n\t\tsetRenderValue,\n\t}\n\n\treturn (\n\t\t<div className='box'>\n\t\t\t<h2>TODO计划表</h2>\n\t\t\t{/* 下面是三个组件 */}\n\t\t\t<InputBox {...InputBoxProps} />\n\t\t\t<List {...ListProps} />\n\t\t\t<FilterOptions {...optionsProps} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}